name: BrainBytes CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  lint:
    name: 🧼 Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: Cache frontend Node.js dependencies
        uses: actions/cache@v3
        with:
          path: brainbytes-multi-container/frontend/node_modules
          key: ${{ runner.os }}-frontend-node-${{ hashFiles('brainbytes-multi-container/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-node-

      - name: Cache backend Node.js dependencies
        uses: actions/cache@v3
        with:
          path: brainbytes-multi-container/backend/node_modules
          key: ${{ runner.os }}-backend-node-${{ hashFiles('brainbytes-multi-container/backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-node-

      - name: ⚙️ Set up Node.js 20.17.0
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: 📦 Install frontend dependencies
        working-directory: brainbytes-multi-container/frontend
        run: npm install

      - name: 🔍 Lint frontend
        working-directory: brainbytes-multi-container/frontend
        run: npm run lint || echo "Frontend lint failed but continuing"

      - name: 📦 Install backend dependencies
        working-directory: brainbytes-multi-container/backend
        run: npm install

      - name: 🔍 Lint backend
        working-directory: brainbytes-multi-container/backend
        run: npm run lint || echo "Backend lint failed but continuing"

      - name: Run ESLint (merge report)
        working-directory: brainbytes-multi-container
        run: |
          npm run lint:js -- --format json --output-file eslint-report.json || true

      - name: Annotate ESLint results (PR only)
        if: github.event_name == 'pull_request'
        uses: github/super-linter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JAVASCRIPT_ES: true
          LINTER_RULES_PATH: brainbytes-multi-container/.eslintrc.json

  test:
    name: 🧪 Run Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.17.0]
        os: [ubuntu-latest]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: Cache frontend Node.js dependencies
        uses: actions/cache@v3
        with:
          path: brainbytes-multi-container/frontend/node_modules
          key: ${{ runner.os }}-frontend-node-${{ hashFiles('brainbytes-multi-container/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-node-

      - name: Cache backend Node.js dependencies
        uses: actions/cache@v3
        with:
          path: brainbytes-multi-container/backend/node_modules
          key: ${{ runner.os }}-backend-node-${{ hashFiles('brainbytes-multi-container/backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-node-

      - name: ⚙️ Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: 📦 Install frontend dependencies
        working-directory: brainbytes-multi-container/frontend
        run: npm install

      - name: 🧪 Frontend Tests
        working-directory: brainbytes-multi-container/frontend
        run: |
          if [ -f "package.json" ] && grep -q "\"test\":" package.json; then
            npm test || echo "❌ Tests failed, but continuing..."
          else
            echo "⚠️ No tests defined. Skipping..."
          fi

      - name: 📦 Install backend dependencies
        working-directory: brainbytes-multi-container/backend
        run: npm install

      - name: 🧪 Backend Tests
        working-directory: brainbytes-multi-container/backend
        run: npm test

      - name: 🔍 Check for vulnerabilities
        working-directory: brainbytes-multi-container
        run: npm audit --json || true

  build:
    name: 🐳 Build Docker Images
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-      

      - name: 🛠️ Build frontend app
        working-directory: brainbytes-multi-container/frontend
        run: |
          npm install
          npm run build

      - name: 🛠️ Build backend app
        working-directory: brainbytes-multi-container/backend
        run: |
          npm install
          npm run build || echo "⚠️ No backend build script defined"

      - name: 🧱 Build frontend Docker image
        run: docker build -t brainbytes-frontend brainbytes-multi-container/frontend

      - name: 🧱 Build backend Docker image
        run: docker build -t brainbytes-backend brainbytes-multi-container/backend

      - name: 📦 Check if build output exists
        run: |
          ls -la brainbytes-multi-container/frontend/.next || echo "❌ Frontend build missing"
          ls -la brainbytes-multi-container/backend/dist || echo "❌ Backend build missing"

      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-outputs
          path: |
            brainbytes-multi-container/frontend/.next
            brainbytes-multi-container/backend/dist

  integration-test:
    name: 🔁 Integration Test with Compose
    needs: build
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:4.4
        ports:
          - 27017:27017
        

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-outputs

      - name: ⚙️ Set up Docker Compose
        working-directory: brainbytes-multi-container
        run: |
          docker-compose -f docker-compose.yml up -d --build
          sleep 20

      - name: Install Playwright browsers
        working-directory: brainbytes-multi-container
        run: npx playwright install --with-deps

      - name: ✅ Check Backend Health
        run: |
          curl --fail http://localhost:4000/api/protected || (echo "❌ Backend health check failed" && exit 1)

      - name: ✅ Check Frontend Health
        run: |
          curl --fail http://localhost:3000 || (echo "❌ Frontend health check failed" && exit 1)

      - name: Run E2E tests
        working-directory: brainbytes-multi-container/e2e-tests
        run: npm run test:e2e

      - name: 🧹 Tear Down
        working-directory: brainbytes-multi-container
        run: docker-compose down
