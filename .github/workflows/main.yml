name: BrainBytes CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  lint:
    name: 🧼 Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: 📦 Install frontend dependencies
        working-directory: brainbytes-multi-container/frontend
        run: npm install

      - name: 🔍 Lint frontend
        working-directory: brainbytes-multi-container/frontend
        run: npm run lint || echo "⚠️ Frontend lint failed"

      - name: 📦 Install backend dependencies
        working-directory: brainbytes-multi-container/backend
        run: npm install

      - name: 🔍 Lint backend
        working-directory: brainbytes-multi-container/backend
        run: npm run lint || echo "⚠️ Backend lint failed"

  test:
    name: 🧪 Run Unit Tests
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: 📦 Install frontend dependencies
        working-directory: brainbytes-multi-container/frontend
        run: npm install

      - name: 🧪 Frontend Tests
        working-directory: brainbytes-multi-container/frontend
        run: |
          if [ -f "package.json" ] && grep -q "\"test\":" package.json; then
            npm test || echo "❌ Frontend tests failed"
          else
            echo "⚠️ No frontend tests defined. Skipping..."
          fi

      - name: 📦 Install backend dependencies
        working-directory: brainbytes-multi-container/backend
        run: npm install

      - name: 🧪 Backend Tests
        working-directory: brainbytes-multi-container/backend
        run: |
          if [ -f "package.json" ] && grep -q "\"test\":" package.json; then
            npm test || echo "❌ Backend tests failed"
          else
            echo "⚠️ No backend tests defined. Skipping..."
          fi

  integration-test:
    name: 🔁 Integration Test with Compose
    needs: test
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:4.4
        ports:
          - 27017:27017

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Build frontend
        working-directory: brainbytes-multi-container/frontend
        run: |
          npm install
          npm run build || echo "⚠️ No frontend build script defined"

      - name: ⚙️ Build backend
        working-directory: brainbytes-multi-container/backend
        run: |
          npm install
          npm run build || echo "⚠️ No backend build script defined"

      - name: 🐳 Check Docker & Compose Version
        run: |
          docker --version
          docker compose version

      - name: 🐳 Start Docker Compose
        working-directory: brainbytes-multi-container
        run: |
          docker compose up -d --build
          sleep 20

      - name: Install Playwright browsers
        working-directory: brainbytes-multi-container
        run: npx playwright install --with-deps

      - name: ✅ Check Backend Health
        run: curl --fail http://localhost:4000/api/protected || (echo "❌ Backend health check failed" && exit 1)

      - name: ✅ Check Frontend Health
        run: curl --fail http://localhost:3000 || (echo "❌ Frontend health check failed" && exit 1)

      - name: Run E2E tests
        working-directory: brainbytes-multi-container/e2e-tests
        run: npm run test:e2e

      - name: 🧹 Tear Down
        working-directory: brainbytes-multi-container
        run: docker compose down
